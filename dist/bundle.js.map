{"version":3,"file":"bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA;;AAEA,kBAAkB,OAAO;AACzB,oBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEyB","sources":["webpack://knights-travails/webpack/bootstrap","webpack://knights-travails/webpack/runtime/define property getters","webpack://knights-travails/webpack/runtime/hasOwnProperty shorthand","webpack://knights-travails/webpack/runtime/make namespace object","webpack://knights-travails/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const gameBoard = function generateBoardCoords() {\n  let coords = [];\n\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      coords.push([i, j]);\n    }\n  }\n\n  return coords;\n};\n\n// Attempt to treat knight as a node which stores its current location\n\nconst knight = function knightNode(coord = null) {\n  const knight = {};\n\n  knight.coord = coord;\n\n  // Maximum eight possible moves for any given coordinate\n\n  knight.tl1 = null;\n  knight.tl2 = null;\n  knight.tr1 = null;\n  knight.tr2 = null;\n  knight.br1 = null;\n  knight.br2 = null;\n  knight.bl1 = null;\n  knight.bl2 = null;\n};\n\n// Given a coordinate, generate a list of the immediate possible moves (up to 8)\n\nconst possibleMoves = function generateImmediatePossibilities(coord) {\n  const x = coord[0];\n  const y = coord[1];\n\n  let possibleMoves = [\n    [x - 2, y + 1],\n    [x - 1, y + 2],\n    [x + 1, y + 2],\n    [x + 2, y + 1],\n    [x + 2, y - 1],\n    [x + 1, y - 2],\n    [x - 1, y - 2],\n    [x - 2, y - 1],\n  ];\n\n  let acceptedMoves = [];\n\n  for (let i = 0; i < 8; i++) {\n    let current = possibleMoves[i];\n    let x = current[0];\n    let y = current[1];\n\n    if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n      acceptedMoves.push(current);\n    }\n  }\n\n  return acceptedMoves;\n};\n\nexport { possibleMoves };\n"],"names":[],"sourceRoot":""}